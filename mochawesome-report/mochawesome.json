{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-29T12:13:40.044Z",
    "end": "2023-05-29T12:13:51.897Z",
    "duration": 11853,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7fa0f68b-3a1a-434e-b732-e94045f72b40",
      "title": "",
      "fullFile": "C:\\Users\\Himanshu\\Desktop\\Telus-KT\\Telus_Automation_Test_Framework\\cypress_framework\\tests\\testuser.js",
      "file": "\\tests\\testuser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45fb483f-d906-41ff-a2c8-7174a3e9ba0e",
          "title": "BSS Sanity Suite",
          "fullFile": "C:\\Users\\Himanshu\\Desktop\\Telus-KT\\Telus_Automation_Test_Framework\\cypress_framework\\tests\\testuser.js",
          "file": "\\tests\\testuser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create User - CRM Account List",
              "fullTitle": "BSS Sanity Suite Create User - CRM Account List",
              "timedOut": false,
              "duration": 1311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try{\n    randomUser = \"TestUser\"+randomNumber;\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.CreateUser_CRMAccountListMgmt_URI;\n    environementUrl = url+\"/\"+uri;\n    updatedRequestBody = dataJson.testData.CreateUser_CRMAccountListMgmt;\n    updatedRequestBody.subscriberList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberList[0].accountList[0].username = randomUser;\n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response)=> {\n        console.log(response.data);\n        return response;\n        \n    })\n}catch(err){\n    console.log(err);\n}\nconsole.log('---------------------------------Test1------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "54c0e096-d66d-4233-8fcb-05d6444a0600",
              "parentUUID": "45fb483f-d906-41ff-a2c8-7174a3e9ba0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cancel Subscription Update Crm Account List Commercial Profile",
              "fullTitle": "BSS Sanity Suite Cancel Subscription Update Crm Account List Commercial Profile",
              "timedOut": false,
              "duration": 1689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.CancelSubscription_UpdateCrmAccountListCommercialProfile_URI;\n    environementUrl = url + \"/\" + uri;\n    console.log('Env URL :===>> ' + environementUrl);\n\n    updatedRequestBody = dataJson.testData.CancelSubscription_UpdateCrmAccountListCommercialProfile;\n    updatedRequestBody.subscriberPackageList[0].userName = randomUser;\n    updatedRequestBody.subscriberPackageList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberPackageList[0].commProfileList[0].solutionOfferExternalID=solutionOfferExternalID;\n    updatedRequestBody.subscriberPackageList[0].commProfileList[0].solutionOfferID=solutionOfferID;\n  \n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response) => {\n        console.log(response.data);\n        return response;\n    })\n} catch (err) {\n    console.log(err);\n}\nconsole.log('---------------------------------Test-2------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "95f1d4ce-42bb-485d-b303-118382bb6d49",
              "parentUUID": "45fb483f-d906-41ff-a2c8-7174a3e9ba0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Profile",
              "fullTitle": "BSS Sanity Suite Update Profile",
              "timedOut": false,
              "duration": 1459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.userSearch_URI;\n    environementUrl = url + \"/\" + uri + \"\" + randomUser;\n    console.log('Env URL := ' + environementUrl);\n    const config = {\n        'method': 'GET',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config);\n    let apiResponse = response.data;\n    console.log(apiResponse);\n\n    //       const resultCode = apiResponse.resultCode;\n    //       console.log(resultCode);\n    //       const resultDescription = apiResponse.resultDescription;\n    //       console.log(resultDescription);\n    const resultObj = apiResponse.resultObj;\n    console.log(\"Result Object Body := \", resultObj);\n    //       const totalCount = resultObj.totalCount;\n    // console.log(totalCount);\n    const accountSearchResponseList = resultObj.accountSearchResponseList;\n    console.log(\"Account Search Response List Body : = \", accountSearchResponseList);\n    accountSearchResponseList.forEach(account => {\n        // const crmAccountId = account.crmAccountId;\n        // const customerCode = account.customerCode;\n        const region = account.region;\n        console.log('Region Body : = ', region);\n        const accountList = account.accountList;\n        console.log(\"Account List Body : = \", accountList);\n        const consentList = account.consentList;\n        console.log(\"Consent List Body :=\", consentList);\n        // ... access other properties of each account object\n    });\n} catch (err) {\n    console.log(err);\n    \n}\nconsole.log('---------------------------------Test-3------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "8f06acf8-cce5-4d19-90c3-3f2735f7e401",
              "parentUUID": "45fb483f-d906-41ff-a2c8-7174a3e9ba0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update User CRM Account List Mgmt",
              "fullTitle": "BSS Sanity Suite Update User CRM Account List Mgmt",
              "timedOut": false,
              "duration": 2406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.UpdateUser_CRMAccountListMgmt_URI;\n    environementUrl = url + \"/\" + uri;\n    console.log('Env URL :===>> ' + environementUrl);\n\n    updatedRequestBody = dataJson.testData.UpdateUser_CRMAccountListMgmt;\n    updatedRequestBody.subscriberList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberList[0].accountList[0].username = randomUser;\n    updatedRequestBody.subscriberList[0].commProfileList[0].solutionOfferExternalID=solutionOfferExternalID;\n    updatedRequestBody.subscriberList[0].commProfileList[0].solutionOfferID=solutionOfferID;\n\n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response) => {\n        const apiResponse = response.data;\n        console.log(apiResponse);\n        // return response;\n        const deviceID = apiResponse.subscriber[0].deviceList;\n        console.log(\"Device List : = \", deviceID);\n    })\n} catch (err) {\n    console.log(err);\n}\nconsole.log('---------------------------------Test4------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "9da5ffb6-699c-425d-b72c-2b994a75afc5",
              "parentUUID": "45fb483f-d906-41ff-a2c8-7174a3e9ba0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "FIPS Code Pin",
              "fullTitle": "BSS Sanity Suite FIPS Code Pin",
              "timedOut": false,
              "duration": 1353,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.FIPS_Code_URI;\n    environementUrl = url + \"/\" + uri;\n    console.log('Env URL := ' + environementUrl);\n\n    updatedRequestBody = dataJson.testData.FIPS_Code;\n    updatedRequestBody.subscriberList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberList[0].properties[0].propertyName=propertyName;\n    updatedRequestBody.subscriberList[0].accountList[0].username = randomUser;\n  \n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response) => {\n        const apiResponse = response.data;\n        console.log(apiResponse);\n        return response;\n        // const deviceID=apiResponse.subscriber[0].deviceList;\n        // console.log(\"Device List : = \",deviceID);\n    })\n} catch (err) {\n    console.log(err);\n}\nconsole.log('---------------------------------Test5------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "e14d5bf3-6bb5-4cba-81fa-dcb1f9cd8229",
              "parentUUID": "45fb483f-d906-41ff-a2c8-7174a3e9ba0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cancel Subscription Update Crm Account List Commercial Profile Copy Check",
              "fullTitle": "BSS Sanity Suite Cancel Subscription Update Crm Account List Commercial Profile Copy Check",
              "timedOut": false,
              "duration": 1993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try{\n //   randomUser = \"TestUser\"+randomNumber;\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.CancelSubscription_UpdateCrmAccountListCommercialProfile_URI;\n    environementUrl = url+\"/\"+uri;\n    console.log('Environement URL :===>> ',environementUrl);\n    updatedRequestBody = dataJson.testData.CancelSubscription_UpdateCrmAccountListCommercialProfile_Copy;\n    updatedRequestBody.subscriberPackageList[0].userName = randomUser;\n    updatedRequestBody.subscriberPackageList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberPackageList[0].commProfileList[0].solutionOfferExternalID=solutionOfferExternalID;\n    updatedRequestBody.subscriberPackageList[0].commProfileList[0].solutionOfferID=solutionOfferID;\n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response)=> {\n        console.log(response.data);\n        return response;\n        \n    })\n}catch(err){\n    console.log(err);\n}\nconsole.log('---------------------------------Test-6------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "56c65ef7-97b0-4ea2-b2cb-105a4167fb87",
              "parentUUID": "45fb483f-d906-41ff-a2c8-7174a3e9ba0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Crm Account List Commercial Profile",
              "fullTitle": "BSS Sanity Suite Update Crm Account List Commercial Profile",
              "timedOut": false,
              "duration": 1617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try{\n //   randomUser = \"TestUser\"+randomNumber;\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.UpdateCrmAccountListCommercialProfile_URI;\n    environementUrl = url+\"/\"+uri;\n    console.log('Environement URL :===>> ',environementUrl);\n    updatedRequestBody = dataJson.testData.UpdateCrmAccountListCommercialProfile;\n    updatedRequestBody.subscriberPackageList[0].userName = randomUser;\n    updatedRequestBody.subscriberPackageList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberPackageList[0].commProfileList[0].solutionOfferExternalID=solutionOfferExternalID;\n    updatedRequestBody.subscriberPackageList[0].commProfileList[0].solutionOfferID=solutionOfferID;\n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response)=> {\n        console.log(response.data);\n        return response;\n        \n    })\n}catch(err){\n    console.log(err);\n}\nconsole.log('---------------------------------Test-7------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "d5a01a4a-feae-43d6-8cd2-3057c29f3920",
              "parentUUID": "45fb483f-d906-41ff-a2c8-7174a3e9ba0e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54c0e096-d66d-4233-8fcb-05d6444a0600",
            "95f1d4ce-42bb-485d-b303-118382bb6d49",
            "8f06acf8-cce5-4d19-90c3-3f2735f7e401",
            "9da5ffb6-699c-425d-b72c-2b994a75afc5",
            "e14d5bf3-6bb5-4cba-81fa-dcb1f9cd8229",
            "56c65ef7-97b0-4ea2-b2cb-105a4167fb87",
            "d5a01a4a-feae-43d6-8cd2-3057c29f3920"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11828,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}