{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-29T11:43:19.247Z",
    "end": "2023-05-29T11:43:27.888Z",
    "duration": 8641,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1e25d233-e343-41b1-97d7-867929404e94",
      "title": "",
      "fullFile": "C:\\Users\\Himanshu\\Desktop\\Telus-KT\\Automation_Test_framework\\tests\\testuser.js",
      "file": "\\tests\\testuser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6e39f7c6-49e5-4edd-941d-9a8370b5f591",
          "title": "BSS Sanity Suite",
          "fullFile": "C:\\Users\\Himanshu\\Desktop\\Telus-KT\\Automation_Test_framework\\tests\\testuser.js",
          "file": "\\tests\\testuser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create User - CRM Account List",
              "fullTitle": "BSS Sanity Suite Create User - CRM Account List",
              "timedOut": false,
              "duration": 1979,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try{\n    randomUser = \"TestUser\"+randomNumber;\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.CreateUser_CRMAccountListMgmt_URI;\n    environementUrl = url+\"/\"+uri;\n    updatedRequestBody = dataJson.testData.CreateUser_CRMAccountListMgmt;\n    updatedRequestBody.subscriberList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberList[0].accountList[0].username = randomUser;\n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response)=> {\n        console.log(response.data);\n        return response;\n        \n    })\n}catch(err){\n    console.log(err);\n}\nconsole.log('---------------------------------Test1------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "de39f784-eb5e-4138-a150-6515890e1a7f",
              "parentUUID": "6e39f7c6-49e5-4edd-941d-9a8370b5f591",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cancel Subscription Update Crm Account List Commercial Profile",
              "fullTitle": "BSS Sanity Suite Cancel Subscription Update Crm Account List Commercial Profile",
              "timedOut": false,
              "duration": 1362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.CancelSubscription_UpdateCrmAccountListCommercialProfile_URI;\n    environementUrl = url + \"/\" + uri;\n    console.log('Env URL :===>> ' + environementUrl);\n\n    updatedRequestBody = dataJson.testData.CancelSubscription_UpdateCrmAccountListCommercialProfile;\n    updatedRequestBody.subscriberPackageList[0].userName = randomUser;\n    updatedRequestBody.subscriberPackageList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberPackageList[0].commProfileList[0].solutionOfferExternalID=solutionOfferExternalID;\n    updatedRequestBody.subscriberPackageList[0].commProfileList[0].solutionOfferID=solutionOfferID;\n  \n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response) => {\n        console.log(response.data);\n        return response;\n    })\n} catch (err) {\n    console.log(err);\n}\nconsole.log('---------------------------------Test-2------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "7708e107-b56b-4979-95f1-85eb027b96ba",
              "parentUUID": "6e39f7c6-49e5-4edd-941d-9a8370b5f591",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Profile",
              "fullTitle": "BSS Sanity Suite Update Profile",
              "timedOut": false,
              "duration": 1297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.userSearch_URI;\n    environementUrl = url + \"/\" + uri + \"\" + randomUser;\n    console.log('Env URL := ' + environementUrl);\n    const config = {\n        'method': 'GET',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config);\n    let apiResponse = response.data;\n    console.log(apiResponse);\n\n    //       const resultCode = apiResponse.resultCode;\n    //       console.log(resultCode);\n    //       const resultDescription = apiResponse.resultDescription;\n    //       console.log(resultDescription);\n    const resultObj = apiResponse.resultObj;\n    console.log(\"Result Object Body := \", resultObj);\n    //       const totalCount = resultObj.totalCount;\n    // console.log(totalCount);\n    const accountSearchResponseList = resultObj.accountSearchResponseList;\n    console.log(\"Account Search Response List Body : = \", accountSearchResponseList);\n    accountSearchResponseList.forEach(account => {\n        // const crmAccountId = account.crmAccountId;\n        // const customerCode = account.customerCode;\n        const region = account.region;\n        console.log('Region Body : = ', region);\n        const accountList = account.accountList;\n        console.log(\"Account List Body : = \", accountList);\n        const consentList = account.consentList;\n        console.log(\"Consent List Body :=\", consentList);\n        // ... access other properties of each account object\n    });\n} catch (err) {\n    console.log(err);\n    \n}\nconsole.log('---------------------------------Test-3------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "5800aba7-ca67-44f5-b16e-0e3b41c2b5e8",
              "parentUUID": "6e39f7c6-49e5-4edd-941d-9a8370b5f591",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update User CRM Account List Mgmt",
              "fullTitle": "BSS Sanity Suite Update User CRM Account List Mgmt",
              "timedOut": false,
              "duration": 1199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.UpdateUser_CRMAccountListMgmt_URI;\n    environementUrl = url + \"/\" + uri;\n    console.log('Env URL :===>> ' + environementUrl);\n\n    updatedRequestBody = dataJson.testData.UpdateUser_CRMAccountListMgmt;\n    updatedRequestBody.subscriberList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberList[0].accountList[0].username = randomUser;\n    updatedRequestBody.subscriberList[0].commProfileList[0].solutionOfferExternalID=solutionOfferExternalID;\n    updatedRequestBody.subscriberList[0].commProfileList[0].solutionOfferID=solutionOfferID;\n\n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response) => {\n        const apiResponse = response.data;\n        console.log(apiResponse);\n        // return response;\n        const deviceID = apiResponse.subscriber[0].deviceList;\n        console.log(\"Device List : = \", deviceID);\n    })\n} catch (err) {\n    console.log(err);\n}\nconsole.log('---------------------------------Test4------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "309806a6-ff21-4ce3-ad83-1d4c4d5eef6f",
              "parentUUID": "6e39f7c6-49e5-4edd-941d-9a8370b5f591",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "FIPS Code Pin",
              "fullTitle": "BSS Sanity Suite FIPS Code Pin",
              "timedOut": false,
              "duration": 1273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.FIPS_Code_URI;\n    environementUrl = url + \"/\" + uri;\n    console.log('Env URL := ' + environementUrl);\n\n    updatedRequestBody = dataJson.testData.FIPS_Code;\n    updatedRequestBody.subscriberList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberList[0].properties[0].propertyName=propertyName;\n    updatedRequestBody.subscriberList[0].accountList[0].username = randomUser;\n  \n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response) => {\n        const apiResponse = response.data;\n        console.log(apiResponse);\n        return response;\n        // const deviceID=apiResponse.subscriber[0].deviceList;\n        // console.log(\"Device List : = \",deviceID);\n    })\n} catch (err) {\n    console.log(err);\n}\nconsole.log('---------------------------------Test5------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "a327f2ed-bc54-45e6-af61-0876bbbf498f",
              "parentUUID": "6e39f7c6-49e5-4edd-941d-9a8370b5f591",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cancel Subscription Update Crm Account List Commercial Profile Copy Check",
              "fullTitle": "BSS Sanity Suite Cancel Subscription Update Crm Account List Commercial Profile Copy Check",
              "timedOut": false,
              "duration": 1503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try{\n //   randomUser = \"TestUser\"+randomNumber;\n    url = apiConfigJson.ams_preprod.url;\n    uri = apiConfigJson.ams_preprod.CancelSubscription_UpdateCrmAccountListCommercialProfile_URI;\n    environementUrl = url+\"/\"+uri;\n    console.log('Environement URL :===>> ',environementUrl);\n    updatedRequestBody = dataJson.testData.CancelSubscription_UpdateCrmAccountListCommercialProfile_Copy;\n    updatedRequestBody.subscriberPackageList[0].userName = randomUser;\n    updatedRequestBody.subscriberPackageList[0].crmAccountId = randomUser;\n    updatedRequestBody.subscriberPackageList[0].commProfileList[0].solutionOfferExternalID=solutionOfferExternalID;\n    updatedRequestBody.subscriberPackageList[0].commProfileList[0].solutionOfferID=solutionOfferID;\n    const config = {\n        'method': 'POST',\n        'url': environementUrl,\n        'maxBodyLength': Infinity,\n        'headers': {\n            'Content-Type': 'application/json'\n        },\n        'data': JSON.stringify(updatedRequestBody),\n        'httpsAgent': httpsAgentPreProd\n    }\n    response = await axios(config).then((response)=> {\n        console.log(response.data);\n        return response;\n        \n    })\n}catch(err){\n    console.log(err);\n}\nconsole.log('---------------------------------Test-6------------------------------------------------------------------------------');",
              "err": {},
              "uuid": "6297e582-30e9-49d6-9c16-c6b5e27b75f4",
              "parentUUID": "6e39f7c6-49e5-4edd-941d-9a8370b5f591",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de39f784-eb5e-4138-a150-6515890e1a7f",
            "7708e107-b56b-4979-95f1-85eb027b96ba",
            "5800aba7-ca67-44f5-b16e-0e3b41c2b5e8",
            "309806a6-ff21-4ce3-ad83-1d4c4d5eef6f",
            "a327f2ed-bc54-45e6-af61-0876bbbf498f",
            "6297e582-30e9-49d6-9c16-c6b5e27b75f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8613,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}